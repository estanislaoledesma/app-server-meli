swagger: '2.0'
info:
  description: API para el app server de Comprame
  title: Comprame - App Server API
  version: 1.0.0
host: Comprame.7552.fi.uba.ar
schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json
components:
  securitySchemes:
    token:
      type: http
      scheme: bearer
paths:
  /login:
    post:
      description: "Endpoint para logearse en la aplicación"
      parameters:
        - description: "Datos para logearse"
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApplicationLoginCredentials'
      responses:
        200:
          description: "Login exitoso"
          schema:
            properties:
              token:
                $ref: "#/definitions/Token"
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      summary: "Generar token de usuario"
  /signup:
    post:
      description: "Endpoint para dar de alta un usuario."
      parameters:
        - description: "Datos para dar de alta un usuario"
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UserData"
      responses:
        200:
          description: "Alta correcta"
          schema:
            properties:
              token:
                $ref: '#/definitions/Token'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"

  /products:
    post:
      description: "Endpoint para publicar un producto."
      security:
        - token: []
      parameters:
        - description: "Datos para publicar un producto"
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: "Publicación correcta"
          schema:
            properties:
              token:
                $ref: '#/definitions/Token'
              product:
                $ref: '#/definitions/PublishedProduct'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    get:
      description: "Endpoint para obtener productos publicados."
      security:
        - token: []
      responses:
        200:
          description: "Obtención ok"
          schema:
            properties:
              token:
                $ref: '#/definitions/Token'
              products:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PublishedProduct'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"

  /users/{userId}:
    parameters:
      - description: "Perfil de usuario"
        in: path
        name: serverId
        required: true
        type: string
    get:
      tags:
        - profile
      description: "Devuelve toda la información del perfil del usuario"
      responses:
        200:
          description: "Información del usuario"
          schema:
            properties:
              user:
                $ref: "#/definitions/User"
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Usuario inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un usuario"
    put:
      tags:
        - profile
      description: |
        Endpoint para editar el perfil del usuario.
      parameters:
        - description: Datos para modificar el perfil del usuario
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "Edición de perfil exitosa"
          schema:
            properties:
              user:
                $ref: '#/definitions/User'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "No existe el usuario solicitado"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflicto en el update"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      summary: "Resetear un token de un servidor"
  /chat/{userId}:
    parameters:
      - description: "Servicio de chat entre comprador y vendedor"
        in: path
        name: userId
        required: true
        type: string
    post:
      tags:
        - messages
      description: |
        Enviar nuevo mensaje al chat
      parameters:
        - description: Mensaje a enviar
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Message"
      responses:
        200:
          description: "Envio del mensaje exitoso"
          schema:
            properties:
              chat:
                $ref: '#/definitions/Chat'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Usuario inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - messages
      description: |
        Recibir mensajes en el chat
      responses:
        200:
          description: "Recibo del mensaje exitoso"
          schema:
            properties:
              chat:
                $ref: '#/definitions/Chat'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Usuario inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /publish:
    post:
      tags:
        - articles
      description: |
        Publicar un nuevo articulo
      parameters:
        - description: Articulo a publicar
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Article"
      responses:
        200:
          description: "Publicacion exitosa"
          schema:
            properties:
              QRcode:
                $ref: '#/definitions/QRcode'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Usuario inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /articles/{articleId}/questions:
    parameters:
      - description: "Servicio de alta de pregunta"
        in: path
        name: articleId
        required: true
        type: string
    post:
      tags:
        - articles
      description: |
        Publicar una pregunta acerca de un articulo
      parameters:
        - description: Pregunta a publicar en el anuncio del articulo
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Question"
      responses:
        200:
          description: "Publicacion de la pregunta exitosa"
          schema:
            properties:
              questionId:
                type: string
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Usuario inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /answer/{questionId}:
    parameters:
      - description: "Id de la pregunta a la que se responde"
        in: path
        name: questionId
        required: true
        type: string
    post:
      tags:
        - articles
      description: |
        Publicar una respuesta a una pregunta acerca de un articulo
      parameters:
        - description: Respuesta a la pregunta publicada
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Answer"
      responses:
        200:
          description: "Publicacion de la respuesta exitosa"
          schema:
            properties:
              answer:
                $ref: '#/definitions/Answer'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Usuario inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /purchase/{articleId}:
    parameters:
      - description: "Id del artìculo que se quiere comprar"
        in: path
        name: articleId
        required: true
        type: string
    post:
      tags:
        - articles
      description: |
        Comprar un artìculo
      parameters:
        - description: Método de compra
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PaymentMethod"
      responses:
        200:
          description: "Compra exitosa"
          schema:
            properties:
              answer:
                $ref: '#/definitions/Purchase'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Artículo inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /track/{trackingId}:
    parameters:
      - description: "Id de tracking del artículo comprado"
        in: path
        name: trackingId
        required: true
        type: string
    get:
      tags:
        - tracking
      description: |
        Trackear un artículo comprado
      responses:
        200:
          description: "Estado de la compra trackeado"
          schema:
            properties:
              answer:
                $ref: '#/definitions/State'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        404:
          description: "Compra inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /search?{location}:
    parameters:
      - description: "Ubicación en la que se quiere buscar artículos"
        in: path
        name: location
        required: true
        type: string
    get:
      tags:
        - articles
      description: |
        Buscar un artículo por ubicación
      responses:
        200:
          description: "Búsqueda de artículos cercanos exitosa"
          schema:
            properties:
              answer:
                $ref: '#/definitions/Articles'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /search/{name}:
    parameters:
      - description: "Nombre por el que se quiere buscar artículos"
        in: path
        name: name
        required: true
        type: string
    get:
      description: |
        Buscar un artículo por nombre
      responses:
        200:
          description: "Búsqueda de artículos por nombre exitosa"
          schema:
            properties:
              answer:
                $ref: '#/definitions/Articles'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /search/{description}:
    parameters:
      - description: "Descripción por la que se quiere buscar artículos"
        in: path
        name: description
        required: true
        type: string
    get:
      tags:
        - articles
      description: |
        Buscar un artículo por descripción
      responses:
        200:
          description: "Búsqueda de artículos por descripción exitosa"
          schema:
            properties:
              answer:
                $ref: '#/definitions/Articles'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /{articleId}/delivery/{location}:
    parameters:
      - description: "Id del artículo de envío"
        in: path
        name: articleId
        required: true
        type: string
      - description: "Ubicaciòn por la que se quiere cotizr el envío"
        in: path
        name: location
        required: true
        type: string
    get:
      tags:
        - articles
      description: |
        Cotizar el envío de un artículo a la ubicación deseada
      responses:
        200:
          description: "Cotización exitosa"
          schema:
            properties:
              price:
                type: number
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /ping:
    get:
      description: |
        Determinar el estado del servidor
      responses:
        200:
          description: "Servidor activo"
          schema:
            properties:
              pong:
                type: string
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /stats:
    get:
      description: |
        Datos del uso del servidor
      responses:
        200:
          description: "Obtenciòn de datos exitosa"
          schema:
            $ref: "#/definitions/ServerStats"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /score/{userId}:
    parameters:
      - description: "Id del usuario por el que se consulta el puntaje"
        in: path
        name: userId
        required: true
        type: string
    get:
      tags:
        - articles
      description: |
        Obtener el puntaje de un usuario
      responses:
        200:
          description: "Obtención de puntaje exitosa"
          schema:
            properties:
              answer:
                $ref: '#/definitions/Score'
        401:
          description: Unauthorized
          schema:
              $ref: '#/definitions/Error'
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
	put:
      tags:
        - profile
      description: |
        Endpoint para editar el rating/score del usuario.
      parameters:
        - description: Datos para modificar el perfil del usuario
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "Edición de perfil exitosa"
          schema:
            properties:
              user:
                $ref: '#/definitions/User'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "No existe el usuario solicitado"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflicto en el update"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"

definitions:
  Version:
    type: string
    description: Versión de la api
  Error:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
    type: object
  Token:
    properties:
      token:
        type: string
        description: "Token de autenticación"
  ApplicationLoginCredentials:
    properties:
      email:
        type: string
      password:
        type: string
        format: password
  UserData:
    properties:
      display_name:
        type: string
      email:
        type: string
      password:
        type: string
        format: password
  Product:
    properties:
      name:
        type: string
      description:
        type: string
      price:
        type: number
      images:
        type: object
  PublishedProduct:
    properties:
      id:
        type: number
      name:
        type: string
      description:
        type: string
      price:
        type: number
      images:
        type: object
      userId:
        type: number

  User:
    properties:
      personalInformation:
        $ref: '#/definitions/PersonalInformation'
      profilePicture:
        type: url
      activities:
       $ref: '#/definitions/Activities'
  PersonalInformation:
    properties:
      name:
        type: string
      surname:
        type: string
      email:
        type: string
  Activities:
    properties:
      activities:
        type: object
  Message:
    properties:
      message:
        type: string
  Chat:
    properties:
      messages:
        type: object
  Article:
    properties:
      name:
        type: string
      description:
        type: string
      stock:
        type: integer
      price:
        type: number
      images:
        type: object
      userId:
        type: integer
      location:
        $ref: '#/definitions/Location'
      paymentMethods:
        type: object
      category:
        type: string
  QRcode:
    properties:
      code:
        type: object
  Question:
    properties:
      message:
        type: string
  Answer:
    properties:
      message:
        type: string
  Location:
    description: |
      Las coordenadas utilizan la especificación de [GeoJSON](https://geojson.org/geojson-spec.html#coordinate-reference-system-objects)
      donde `lon` es el primer número, mientras `lat` el segundo
    properties:
      lat:
        type: number
      lon:
        type: number
  PaymentMethod:
    description: Método de pago
    properties:
      method:
        type: string
      card:
        type: string
      authorization:
        type: string
  Purchase:
    description: Compra
    properties:
      purchaseId:
        type: string
      articleId:
        type: string
      trackingId:
        type: string
  State:
    description: Estado del artículo comprado
    properties:
      stateId:
        type: string
      stateDescription:
        type: string
  Articles:
    description: Conjunto de artículos publicados
    properties:
      articles:
        type: object
  ServerStats:
    description: Datos de uso del servidor
    properties:
      status:
        type: string
      serverUsage:
        type: number
  Score:
    description: Puntaje del usuario
    properties:
      score:
        type: number